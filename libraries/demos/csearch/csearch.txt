Constrained Search (Graph Coloring)
----------- ------ ------ ---------

You have been asked to color the nodes of an undirected
graph so that no two neighbors have the same color.  The
colors are represented by capital letters, and some
nodes have been preassigned a color.

You are allowed to use just m colors.  Each node of the
graph will have at least m neighbors.  Some nodes are
assigned colors initially, and you must not change
these.

Note: This is a constrained search problem.  See the
constrained_search help file.


Input
-----

For each of several test cases, the following lines:

     test case name line
     possible color line
     initial node color assignment line
     connection lines

The test case name line names the test case and can con-
tain any characters.

The possible color line contains just distinct capital
letters.  These represent the allowed colors for the
test case.

The initial node color assignment line has one character
for each graph node.  The character in column i is the
the color initially assigned to node i, or is `?' if the
node is not initially assigned a color.  The number of
characters in this line is the number n of nodes in the
graph.  2 <= n <= 80.

There are n connection lines each with n characters.
The character in line i column j is `*' if there is an
edge between node i and node j, and is `.' if there is
no edge between node i and node j.  Note that a node is
never connected to itself.  Also note that the character
in line i column j is the same as the character in line
j column i.  Lastly, the rows are numbered from top to
bottom, and the columns, of course, from left to right.

Input ends with an end of file.


Output
------

For each test case two lines.  First an exact copy of
the test case name line.  Second a solution line or a
line containing EXACTLY `no solution'.

A solution line contains exactly n characters, where n
is the number of graph nodes, such that the character
in column i is the color assigned to node i.

If there are many solutions just output ONE.


Sample Input
------ -----

-- SAMPLE 1 --
ZOV
Z?Z?O
.*.**
*.**.
.*.**
***.*
*.**.
-- SAMPLE 2 --
UID
??DUU?????
..*..**.*.
..*..***.*
**.*...*..
..*..*..*.
.....**.*.
**.**.*...
**..**...*
.**.....**
*..**..*.*
.*....***.


Sample Output
------ ------

-- SAMPLE 1 --
ZOZVO
-- SAMPLE 2 --
no solutions



File:	   csearch.txt
Author:	   Bob Walton <walton@deas.harvard.edu>
Date:	   Sat Sep 11 06:53:27 EDT 2010

The authors have placed this file in the public domain;
they make no warranty and accept no liability for this
file.

RCS Info (may not be true date or author):

    $Author: walton $
    $Date: 2010/09/11 10:55:22 $
    $RCSfile: csearch.txt,v $
    $Revision: 1.5 $

