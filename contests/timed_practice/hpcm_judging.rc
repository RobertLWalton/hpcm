# TCL Parameters File for Timed Practice Contest Judging
#
# File:		hpcm_judging.rc
# Author:	Bob Walton (walton@seas.harvard.edu)
# Date:		Sat Aug 12 04:27:44 EDT 2017
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2014/12/28 18:38:47 $
#   $RCSfile: hpcm_judging.rc,v $
#   $Revision: 1.7 $

# Table of Contents
#
#	Parameters to be Modified
#	Local Account Parameters
#	Web Page Parameters
#	Parameters Not Usually Modified
#	Computed Parameters (Do Not Modify)
#	Parameter Overrides

# Parameters to be Modified
# ---------- -- -- --------

# Read standard parameters.
#
source $lib_directory/hpcm_judging.rc

# Set to the HPCM directory.  $env(HOME) is the home
# directory of the current (judge's) account.
#
set hpcm_directory $env(HOME)/hpcm

# The following parameters determine the type and
# variety of contest.

# Contest name, for scoreboard etc.
#
set contest_name "CONTEST NAME IS TBD"

# Map of contestant email (i.e., account) addresses for
# the scoreboard.  Scores for a contestant with address
# PPP@CCC will by treated as if the contestant name was
# the value of
#
#	submitter_compress_map(PPP@CCC)
#
# if that exists, and as PPP otherwise.
#
array set submitter_compress_map {}
# array set submitter_compress_map {
#	PPP@CCC1	NAME1
#	PPP@CCC2	NAME2
# }

# The email address to be notified for errors or
# queries.
#
set manager_address "someone@somecomputer"

# Set the following to "yes" if you want ALL autojudge
# replies to contestants to be CC'ed to the manager,
# even those just reporting scores.
#
set cc_manager yes
# set cc_manager no

# A cc address can be added to ALL autojudge replies to
# a submitter by adding the pair
#
#	{ regexp address }
#
# to the list `response_manager_map'.  If `regexp'
# matches the submitter (account or email address) then
# `address' is added to the `Cc' addresses of each
# reply.  Use an lappend command as below and quote
# `regexp' and `address' if they contain spaces.
# `address' can have several comma separated addresses.
#
# This allows teams to have their own response managers.
#
# lappend response_manager_map { regexp address }

# Contest duration, or stop time, relative to start
# time for a team, in seconds.
#
set stop_time   [expr 5 * 60 * 60]
#
# The penalty in minutes for submitting an incorrect
# solution to a problem for which a correct solution is
# later submitted in a timed contest.
#
# set penalty_minutes 20
set penalty_minutes 0

# Set to "yes" to convert the scoreboard from a timed
# contest to an untimed contest.
#
# set convert yes
set convert no

# TCL list of TCL regular expressions that match the
# test accounts which are NOT to appear on the score-
# board.
#
set test_accounts { }

# Ditto for test problems instead of accounts.  Usually
# you need not change this.
#
set test_problems [get_problems demos]

# List of makecontest arguments that specify the
# problems.  The format is
#
#	INDEX-FILE-NAME,
#	    SUBDIRECTORY/=problems/,
#	    QUALIFIER:include
#
# where the problems are in the SUBDIRECTORY of the
# directory holding the index file.  See below for
# examples.
#
set problems_arguments "
    $hpcm_directory/libraries/public/public.index, \
	=problems/, \
	    bospre2010:include
"
# Use the following if index is the file ~/ppp/iii and
# problems are in subdirectories of ~/ppp.  Because the
# problems are subdirectories of ~/ppp which contains
# the index file, `SUBDIRECTORY/' is the omitted.
# $env(HOME) is the home directory of the current
# (judge's) account.  `ALL' means include all problems
# listed in the index.
#
# set problems_arguments "
#     $env(HOME)/ppp/iii, \
#         =problems/, \
#             ALL:include
# "
#
# See hpcm/judge/lib/hpcm_judging.rc `makecontest_
# arguments' for more details, and `makecontest -doc'
# for complete details.

# Web Page Parameters
# --- ---- ----------

# The following are passed to `makeweb' to make the web
# page.  Leave as "" parameters you do not want to use
# (e.g., if web_solutions_password is "" no solutions
# web page will be made).
#
# The web_page_URL is the URL of the web page being
# made.  This variable is only used to make help/this_
# contest, and is not use to make the web page itself.
#
# The web_manager_address will be listed as a contact
# on the contest web pages.
#
# The web_solutions_password PPP will be used to name a
# subdirectory `private/PPP' of the web page directory
# that will hold the solutions.  No link will be made to
# this directory, and the `private' subdirectory will be
# unreadable to the world, so PPP will act as a pass-
# word.
#
# web_description_URL, web_problems_URL, web_help_URL,
# and web_scoreboard_URL are also passed to `makeweb'
# and used to make references from the practice web page
# to the contest description, problem descriptions, web
# help files, and scoreboard if these exist.  These may
# be URL's relative to the practice web page, or
# absolute URL's.
#
# If web_problems_URL is "" the problem descriptions
# from the problem solution files will be put on the
# web as a subpage of the contest web page.
#
set web_page_URL ""
set web_manager_address $manager_address
set web_solutions_password ""
set web_description_URL "help/contest/timed_practice"
set web_problems_URL ""
set web_help_URL "help"
set web_scoreboard_URL "scoreboard"

# The following are used to construct the practice
# contest web pages.
#
# If the headers are left "", the page headers are auto-
# matically constructed from the contest_name.
#
# The prefixes come just after the page headers and
# the postfix comes after everything but the web page
# manager.  There are three pages involved: the practice
# contest page, the problem descriptions page if it is
# constructed, and the practice contest solutions page
# if it is constructed.  The last two pages have no
# postfix.
#
set web_header ""
set web_prefix "
<H2 ALIGN=\"CENTER\">
<FONT COLOR=\"red\">
Practice Contest Description
</FONT></H2>
"
set web_postfix ""
set web_problems_header ""
set web_problems_prefix ""
set web_solutions_header ""
set web_solutions_prefix ""

# The following scoreboard_commands variable specifies
# places to send copies of the scoreboard.  The
# variable value is a list of items each with one of
# the following formats:
#
#	{ NAME ssh ACCOUNT [REMOTE-COMMAND] }
#	    Pipe the scoreboard through ssh to
#	    execute REMOTE-COMMAND in the remote
#	    ACCOUNT.  If not given, REMOTE-COMMAND
#	    defaults to a template which can be
#	    filled out by editing in the file ./secure/
#	    bin/NAME_authorized_keys after it is created
#	    (this will be mentioned in ./TODO).
#
#	{ NAME sh COMMAND }
#	    Pipe the scoreboard to COMMAND executed
#	    by /bin/sh.
#
#	{ NAME email ... }
#	    See contest_commands in hpcm/judge/lib/
#	    hpcm_judging.rc.
#
# These items are appended to the judging_commands
# global variable: see hpcm/judge/lib/hpcm_judging.rc.
#
# NAME is the name of a command that will be created in
# ./secure/bin to invoke the proper pipe.  It may not
# contain whitespace or /.
#
set scoreboard_commands {
}


# Parameters Not Usually Modified
# ---------- --- ------- --------

# Languages supported.
#
set allowed_extensions { .c .cc .java .py }

# Normally you should not have to make changes below
# this point.

# This contest file:
#
if { $web_page_URL == "" } {
    set this_contest "
    This is a Timed Practice Programming Contest.
"
} else {
    set this_contest "
This is a Timed Practice Programming Contest with web
page at:

    $web_page_URL
"
}
set this_contest "$this_contest
The following commands may be of use:

    help timed_practice
        Display a description of Timed Practice
	Programming Contests.

    help index
    	Display the index of help files.

    help XXXX
        Display the help file name XXX.

    help demos
        Display an index of demonstration problems
"

# Set "yes" if contestant accounts are to be enabled
# for login by ssh using any of the public keys
# ~/.ssh/{identity,id_rsa,id_dsa}.pub that exist.
#
set ssh_enable yes
# set ssh_enable no

# Set "yes" to use GMT for dates in file and directory
# names.  Otherwise the local time zone is used.
#
set use_gmt no

# Set the manualreply display to have a certain height
# with a given number of blank lines above that.  If you
# have a taller display, increase window_height.
#
# WARNING: If window_height is too large, programs such
# as manualreply and lookat may appear to be malfunc-
# tioning because some of the information they display
# is being scrolled off the bottom of the screen.
#
set window_blank_height 16
set window_height 24

# Set to contest directory, in case the $judging_
# directory/contest link needs to be made.  If needed
# and not set, the name of judging directory with
# `judging' replaced by `contest' and trailing password
# removed will be used.
#
# set contest_directory $env(HOME)/contest_TBD

# Set to the prototype account (as per SETUP_PROTOTYPE).
# If not set, the unique account with name PPP of the
# form *[-_]proto and readable files ~PPP/home/
# setup.tar, ~PPP/home/empty.ls, and ~PPP/home/setup.ls
# is used, if there is such a unique account.
#
# set hpcm_prototype_account TBD

# Set to "no" if you do not want makecontest to run
# `makescoreboard start'.
#
set makescoreboard yes

# The following is the printer map.  It lets each con-
# testant determine his/her own printer by placing the
# printer name in the ~/PRINTER file of the contestant's
# account.  See `hpcm/contestant/bin/ printer_pipe -doc'
# for more documentation.
#
set contest_printer_map "
# Do not edit.  This is copied from the contest_printer_
# map global variable in the hpcm_judging.rc file in the
# judging directory.
#
.* !~/PRINTER
"


# Computed Parameters (Do Not Modify)
# -------- ---------- ---------------

# You should NOT make changes beyond this point, unless
# you want to tune the contest to be a variant of one of
# the standards supported by this file.  If you do want
# to tune the contest, put changes at the very end of
# this file, where they will override the settings of
# this file.

# Computed web page parameters.
#
if { $web_problems_URL == "" } {
    set web_problems yes
} else {
    set web_problems no
}
set web_title $contest_name

# Set up manager for this contest.
#
set reply_mode auto
set log_mode auto
set log_manager $manager_address
if { $manager_address != "" && $cc_manager } {
    lappend response_manager_map \
	    [list ".*" $manager_address]
}

# Allow inout, solution, cerr in responses.
#
set response_mode "inout+solution+cerr"

set use_authentication yes
set format_submissions yes

# Set score modes and default qualifiers.
#
set scoring_mode auto
if { $convert } {
    set default_correct_qualifier solution
    set default_incorrect_qualifier inout
    set scoreboard_solved_mode score
    set scoreboard_sort_mode problems/score
} else {
    set default_correct_qualifier ""
    set default_incorrect_qualifier ""
    set scoreboard_solved_mode time
    set scoreboard_sort_mode time
}
set allowed_qualifiers {""}

# Scoreboard parameters.
#
set scoreboard_name $contest_name
set scoreboard_factor() 0.95
set scoreboard_start_time team
set scoreboard_stop_time  $stop_time
set scoreboard_penalty     [expr 60 * $penalty_minutes]

# Compute scoreboard_submitters to exclude test
# accounts.
#
set scoreboard_submitters {}
foreach x $test_accounts {
    lappend scoreboard_submitters & ! $x
}
set scoreboard_submitters \
    [lrange $scoreboard_submitters 1 end]
#
# Compute scoreboard_problems to exclude test
# problems.
#
set scoreboard_problems {}
foreach x $test_problems {
    lappend scoreboard_problems & ! $x
}
set scoreboard_problems \
    [lrange $scoreboard_problems 1 end]

# Scoreboard instructions for a timed practice contest.
# These make a scoreboard in the file
#
#	$judging_directory/scoreboard.web
#
# that has the format:
#
#   NAME               				    TIME
#
#   <contents of $judging_directory/scoreboard.head>
#
#   ==== ===== ===== ===== ===== ===== ===== ===== =====
#	   <scoreboard table>
#   ==== ===== ===== ===== ===== ===== ===== ===== =====
#
# This file is then piped to the filters named in the
# scoreboard_commands global variable and also copied
# to $judging_directory/contest/scoreboard which is
# given a+r permissions.
#
set scoreboard_instructions {

    { OUTPUT scoreboard.web "" "" }
    SEND

    { LINE NAME "" TIME }
    BLANK
    { INPUT scoreboard.head }
    BLANK

    BAR
    BOARD
    BAR

    { OUTPUT contest/scoreboard "" "" }
    GRANT_ACCESS
    { INPUT scoreboard.web }
}

# Default arguments to makecontest.
#
set makecontest_arguments "
    -informal \
    -printer_map \
    [include_if { $ssh_enable == "yes" } "-ssh"] \
    [include_if { $makescoreboard == "yes" } \
    		"-scoreboard"] \
    -web \
    $hpcm_directory/contestant/help/help_index, \
	common/=help/, \
	contest/=help/, \
	    contest/timed_practice:include, \
	    contest/acm_contest:include, \
	    general:include, \
	    accounts:include, \
	    language:include \
    $hpcm_directory/libraries/demos/demos.index, \
	io/=demos/, \
	algorithms/=demos/, \
	    contest:include \
    $problems_arguments
"

# Parameter Overrides
# --------- ---------

# Add parameter settings here to override parameters
# that are normally not changed above.
