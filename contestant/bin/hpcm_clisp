#!/bin/sh
#
# Run the COMMONLISP interpreter.
#
# File:		hpcm_clisp
# Author:	Bob Walton <walton@deas.harvard.edu>
# Date:		Wed Feb 13 10:39:18 EST 2002
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: hc3 $
#   $Date: 2002/02/13 16:02:18 $
#   $RCSfile: hpcm_clisp,v $
#   $Revision: 1.4 $

d=`dirname $0`

# Process arguments.
#
case "$1" in
    -doc* )
        # Other argument.  Display documentation and
	# exit with an error.
	#
    	echo "
hpcm_clisp [input-file [output-file]]
hpcm_clisp t
hpcm_clisp -i load-file -x s-expression
hpcm_clisp -I load-file

    Execute COMMONLISP interpreter.  If input-file is
    given, it replaces terminal input, and if output-
    file is given, it replaces standard output.  If
    t is given as the input file, the standard input
    is used but is echoed.

    For this case see documentation obtainable from
    
    	\`(documentation 'run 'function)
    	\`(documentation 'vi 'function)
    	\`(documentation 'vil 'function)
    	\`(documentation 'vir 'function)
    	\`(documentation 'pico 'function)
    	\`(documentation 'picol 'function)
    	\`(documentation 'picor 'function)

    If instead the -i load-file and -x s-expression
    options are given, the load-file is loaded, and then
    the s-expression is evaluated, and there is no read-
    eval-print loop.

    If -I load-file is given, the load-file is loaded
    and the (main) function is called, and the only
    output is that printed by this (main) function.
"
    	exit 1
	;;
    "")
	exec clisp -q -i $d/hpcm_clisp.lsp
	;;
    -i)
        exec clisp -q "$@"
	;;
    -I)
	clisp -q -x \
	     "(progn (load \"$2\"
			   :verbose nil)
		     (main) )" \
	    | sed -e '$d'
	;;
    ?*)
        case "$1" in
	    t | T) in=$1 ;;
	    *)     in="\"$1\"" ;;
	esac
    	case "$2" in
	    "")
		exec clisp -q -x \
		     "(progn (load \"$d/hpcm_clisp.lsp\"
		                   :verbose nil)
		      (run :in $in))"
	    	;;
	    t | T)
		exec clisp -q -x \
		     "(progn (load \"$d/hpcm_clisp.lsp\"
		                   :verbose nil)
		      (run :in $in :out t))"
	    	;;
	    *)
		exec clisp -q -x \
		     "(progn (load \"$d/hpcm_clisp.lsp\"
		                   :verbose nil)
		      (run :in $in :out \"$2\"))"
	    	;;
	esac
	;;
esac
exit 0
