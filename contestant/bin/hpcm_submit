#!/bin/sh
#
# Submit a file.
#
# File:		hpcm_submit
# Author:	Bob Walton <walton@deas.harvard.edu>
# Date:		Sat May  4 03:57:10 EDT 2013
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2013/05/04 07:57:30 $
#   $RCSfile: hpcm_submit,v $
#   $Revision: 1.10 $

extensions=".c .cc .java .lsp"
files=""
qualifier=""
test=""

case "$1" in
    "" | -doc*)
	echo "
hpcm_submit [-qualifier | -test] \\
            problem[.extension] [file ...]

    Submits the files for the problem.  Only the base-
    name of each file is transmitted as part of the
    submission, so \`foo/bar' appears to the judge as
    just \`bar'.

    If no files are given, the problem name with exten-
    sion is taken to be the name of a single file.  If
    in this case there is no extension, one of the fol-
    lowing extensions is selected

    	$extensions
    
    so that the file problem.extension is readable.  It
    is an error if no suitable extensions are found or
    more than one is found.

    Some possible qualifiers are-

      in	Return judge's input for first case
		where problem had Incorrect Output or
		a Formatting Error.

      inout	Ditto but return both judge's input and
		output.

      solution  On Completely Correct submission, return
      		judge's solution.

    Different qualifiers are legal for different con-
    tests.  Most contests do not permit any qualifiers.
    
    The -test option if present is passed to the
    hpcm_sendmail program."

	exit 1
	;;
    -test)
        test="-test"
	shift
        ;;
    -*) qualifier=" "`expr "$1" : '-\(.*\)$'`
        shift
        ;;
esac

problem="$1"
if test $# -gt 1
then
    shift
    files="$@"
else
    case "$problem" in
    *.* )
        files="$problem"
	;;
    *)
	found=no
	for e in $extensions
	do
	    if test -r "$problem$e"
	    then
		if test $found = yes
		then
		    echo too many \
			 "$problem.*" files found
		    exit 1
		fi
		files="$problem$e"
		found=yes
	    fi
	done

	if test $found = no
	then
	    echo "no suitable $problem.* file found"
	    exit 1
	fi

	problem=$files
	;;
    esac
fi

# Submit program files by email.
#
( echo Subject: submit $problem$qualifier; \
  for file in $files; \
  do \
      name=`basename $file`
      echo ""; \
      echo HPCM_BEGIN "$name"; \
      sed -e '/^/s//../' < "$file"; \
      echo HPCM_END "$name"; \
  done ) \
| hpcm_sendmail $test
