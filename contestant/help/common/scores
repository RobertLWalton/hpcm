Scores Help		    Fri Sep 15 06:25:41 EDT 2017

Here we describe the scores of individual problems.  See
the `scoreboard' help file for a description of how
these individual scores are put together into a total
score for each team or individual contestant.


What Scores are Possible
---- ------ --- --------

The possible scores for a particular submission are:

	Completely Correct
	Formatting Error
	Incomplete Output
	CPU Time Limit Exceeded
	Output Size Limit Exceeded
	Program Crashed
	Incorrect Output

The first score, `Completely Correct', means the sub-
mission is correct.  ALL the other scores mean the sub-
mission is incorrect.  Sometimes the word `accepted' is
used instead of `correct' and the word `rejected' is
used instead of `incorrect'.  With this terminology, the
score `Completely Correct' means the submission was
accepted, and ALL the other scores listed above mean the
submission was rejected.


What Do the Scores Mean
---- -- --- ------ ----

Scoring is done by running the judge's input through
your program to produce `your output', which is compared
with the `judge's output', that is produced by running
the judge's solution on the same input.  With this in
mind, the precise meanings of the possible submission
scores are as follows:

Completely Correct

    Your output was essentially the same as the judge's
    output.  For some problems, `essentially the same'
    means exactly the same, character by character.  For
    problems with floating point numeric output, numbers
    may not differ by more than a tolerance specified in
    the problem description.

    If the number of columns occupied by numbers and
    other output is specified by the problem descrip-
    tion, then numbers are required to end in the cor-
    rect column, even when they differ, and the numbers
    MAY NOT have exponents (unless the problem statement
    says otherwise).  If BOTH the number of columns and
    the number of decimal places are specified, your
    numbers must have exactly the given number of
    decimal places.  Otherwise your numbers may or may
    not have an exponent, and specifying a number of
    decimal places is merely a way of specifying an
    absolute tolerance: e.g., `accurate to 3 decimal
    places' just means `accurate to + or - 0.001', and
    you may output 0.900999e2 when the judge's answer is
    90.1.

    If white spaces in the output are specified by the
    problem description, no extra spaces are allowed and
    no required spaces may be missing.  Most problem
    descriptions specify the number of lines to be out-
    put, in which case no extra blank lines may be
    output and no required blank or empty lines may be
    missing.

    `Completely Correct' is the ONLY score that means
    your solution was accepted by the judges, and you
    have solved the problem.  All other scores mean your
    solution has been rejected by the judges.

Formatting Error

    Your output has the right words, spelled correctly,
    and the right numbers, within designated tolerance,
    in the right order, but there are unallowed differ-
    ences in whitespace, columnization, letter case,
    number of decimal places in numbers, or presence or
    absence of exponents in numbers.  These differences
    can be as little as one extra blank line in your
    output!

    Although omitting a blank line is usually a Format-
    ting Error, if the line is used to separate test
    cases, omitting it may be an `Incorrect Output'
    error.

    Misspellings, omitted, and extra words usually
    result in an Incorrect Output score.  For problems
    in which only the numbers really matter, some mis-
    spelled, omitted, or extra words may be considered
    to be just formatting errors.

Incomplete Output

    Your output is not empty, and is either completely
    correct or has only formatting errors, but your out-
    put stops prematurely.

CPU Time Limit Exceeded

    The program was terminated by the system because
    it exceeded the CPU time limit imposed by the pro-
    blem Makefile.  E.g., `-cputime 30' in the Makefile
    imposes a limit of 30 CPU seconds.

    If you open files instead of using the standard in-
    put and output you may get a CPU Time Limit Exceeded
    score because your program read illegal data and
    goes into an infinite loop.

Output Size Limit Exceeded

    The program was terminated by the system because
    it exceeded the amount of output allowed by the
    problem Makefile.  E.g., `-filesize 64m' limits the
    output to 64 megabytes.

Program Crashed

    Your program did not produce ANY output, or your
    program sent output to the standard error stream,
    or your program terminated abnormally; but your
    program did not exceed either CPU time or output
    size limits.  Exceeding memory limits will cause
    this score, because it is unfortunately difficult
    to distinguish memory limit exceedments from other
    kinds of program crashes (e.g., using unallocated
    memory).

    If you open files instead of using the standard in-
    put and output you may get a Program Crashed score
    because your program reads illegal data and crashes.

    JAVA programs often crash because they suffer a
    runtime exception, such as an array subscript out
    of bounds, on the judge's data, but did not suffer
    such an exception on the submitter's own test data.

Incorrect Output

    The program did not crash or terminate prematurely,
    and some word or number in your output does not
    match the corresponding word or number in the
    judge's output, even when letter case and whitespace
    are ignored and number differences within any toler-
    ance stated in the problem description are ignored.

    Omitting a blank line that is used to separate test
    cases may be an `Incorrect Output' error instead of
    a `Formatting Error'.  In general, failure to output
    correctly lines that begin or separate test cases
    may be an `Incorrect Output' error, instead of a
    `Formatting Error'.

    Misspelled, omitted, and extra words are for most
    problems an Incorrect Output error and not a Format-
    ting Error.

The autojudge is generally very good at giving the
right score, with the exception of certain cases where
the autojudge scores `Incorrect Output' but a human
judge would score `Formatting Error'.  Misspelled,
omitted, out-of-order, or extra words may be such cases.

Although a human judge who is manually reviewing scores
could change the score in such a case, she does not for
most contests, because the extra effort to do so is not
worth the minimal benefit to the contestants, who should
find it fairly easy to catch such errors by running
their program on the Sample Input and comparing the
output with the Sample Output, and should not need the
extra hint involved in changing the score.



File:		scores
Author:		Bob Walton <walton@seas.harvard.edu>
Date:		See top of file.

The authors have placed this file in the public domain;
they make no warranty and accept no liability for this
file.
