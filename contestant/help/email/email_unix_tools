Email UNIX Tools Help	    Thu Sep 13 15:34:13 EDT 2001

Before you read this file, read the `help/email_contest'
file up to the section in that file entitled `Getting
Started on a Non-UNIX System'.

Getting Started in a UNIX System
------- ------- -- - ---- ------

First make a `home directory' for the contest you wish
to enter.  You can enter many contests, and should have
a separate home directory for each.  In this home dir-
ectory place a file named `.HPCM_ADDRESS' that contains
the email address of the contest (more specifically,
of the autojudge for the contest).  Thus if the contest
email address is `fee<fi@fo.fum>', execute in the
contest home directory:

	echo 'fee<fi@fo.fum>' >.HPCM_ADDRESS

From now on work in this contest home directory.

Note that it is a bad idea to use your UNIX home direc-
tory `~' as a contest home directory.  Each contest you
enter should have its own unique home directory.

You will be running various HPCM programs written in the
UNIX Bourne shell (sh) language.  Some versions of sh do
not support the `-r' option to the `read' command, the
`-e' option to the `test' command, or the use of back-
slash as a non-interpreted output character by the
`echo' command.  If `/bin/sh' has any of these problems,
the only good fix is to get a copy of the GNU `bash'
Bourne Again shell, and make this shell available using
your PATH under the name `bash'.  Do this now if neces-
sary.  If your UNIX site manager has imported `bash'
already, this is just a matter of making sure it is
accessible via your PATH.  Otherwise the `bash' shell
is available at www.gun.org/software/bash/bash.html.

Next, send email to the contest email address with the
subject `get help' and an empty message body.  The
reply will contain many files (including the file you
are now reading).

Copy this reply into the file named help.email in your
contest home directory.  Manually extract the file
hpcm_extract from this help.email file into your contest
home directory.  The files in help.email are separated
by lines that match the regular expression `^---<>',
that is, that begin with the characters `---<>'.  Using
this fact you can fairly easily extract the hpcm_extract
file with an editor.

Next execute the following UNIX commands in your contest
home directory:

	chmod 700 hpcm_extract
	./hpcm_extract < help.email
	chmod 700 help/sh/*

This will extract all the files into the `help' subdi-
rectory and make the files in `help/sh' executable.

At this point you can remove the files help.email and
hpcm_extract from the contest home directory.  There
will be another copy of hpcm_extract in the `help/sh'
subdirectory.

Next add the `help/sh' subdirectory to your PATH so you
can execute the programs in this directory.  Assuming
your contest home directory is named `~/hpcm/practice',
and assuming you use the `csh' shell, add

	set path=(~/hpcm/practice/help/sh $path)

in your `~/.cshrc' file.  If instead you use the Bourne
shell, add

	PATH=$HOME/hpcm/practice/help/sh:$PATH

in your `~/.profile' file.  In either case, after edit-
ing the relevant file, log out and log back in again,
and then check for errors by typing the UNIX command:

	hpcm_get -doc | more

This should output the documentation for the hpcm_get
program.  You can output the documentation of the other
programs in `help/sh' by executing them with just the
`-doc' option, if you wish, but this should not be
necessary.

Lastly, to automatically extract files from email
replies to requests generated by hpcm_get, add a copy
of `~/hpcm/help/sh/procmailrc' to your `~/.procmailrc'
file, and edit the copy according to the instructions
in what you copied.  This is all you need to do if your
UNIX system uses the procmail program to deliver mail
(as does RedHat Linux).  If your system delivers mail
using a different mailer (as does SUN UNIX), you may
have to put the following line in your `~/.forward'
file:

    "| exec /usr/bin/procmail"

to cause your `~/.procmailrc' file to be used (include
the "'s in the `~/.forward' file).  Here `/usr/bin/
procmail' should be identical to the output of the UNIX
command `which procmail'.

If you cannot arrange for automatic extraction of files
gotten by hpcm_get, you will have to manually input each
reply containing files to the `hpcm_extract' UNIX
command.  E.g., copy a reply into a file `foo' and
execute the command:

	hpcm_extract < foo

within the contest home directory.

To add more contests later, you merely create a contest
home directory for each contest, and a .HPCM_ADDRESS
file within that directory.  You do NOT have to repeat
any of the other actions described above.

Programs like hpcm_extract, hpcm_get, and hpcm_submit
work by searching the current directory and its ances-
tors for a readable .HPCM_ADDRESS file, and using the
first directory they find as the contest home directory.
Thus if hpcm_submit is executed in the `problems/ppp'
subdirectory of the contest home directory, it will
identify `../..' as the contest home directory.


Commands that Do NOT Work
-------- ---- -- --- ----

The following commands do NOT work for an email contest.

	print, print2,		You must print your.
	fprint, lpq		email or files extracted
				therefrom.
	scoreboard		See the scoreboard URL
				instead.
	help			You must print the email
				reply to `get help' or
				files extracted there-
				from.


Testing the Demo in a UNIX System
------- --- ---- -- - ---- ------

The UNIX command `hpcm_get', executed in the contest
home directory, will get all the demonstration files
into the `demos' subdirectory of the contest home di-
rectory.  If you go to the `/demos/count' subdirectory,
you will find a demonstration problem complete with
solutions in all the supported programming languages.
The README file in this directory will tell you how to
install any of these solutions and practice running it
and submitting it.


Working Problems in a UNIX System
------- -------- -- - ---- ------

You can find out what problems are available by looking
at the contest file `help/problems'.  Suppose you decide
to attempt a problem named `ppp' in the C++ language.
Then within the contest home directory execute the UNIX
command `hcpm_get problems/ppp' which will send email to
the autojudge to get that problem.  After files are
extracted from the reply, the problem will be in the
`problems/ppp' subdirectory of the contest home direc-
tory.  A `ppp.txt', `ppp.html', `ppp.ps' (postscript),
or similar file in that directory will describe the
problem.  The `Makefile' in that directory will permit
you to compile, run, and submit the problem, and will
contain the resource limits applied to the problem
during judging.

To write a solution to the problem in C++, you need to
write the file `problems/ppp/ppp.cc'.  See `help/
solving' for more details.

File:		email_unix_tools
Author:		Bob Walton <walton@deas.harvard.edu>
Date:		See top of file.

The authors have placed this file in the public
domain; they make no warranty and accept no liability
for this file.

RCS Info (may not be true date or author):

    $Author: hc3 $
    $Date: 2001/09/15 03:05:28 $
    $RCSfile: email_unix_tools,v $
    $Revision: 1.10 $
