Email Practice Help	    Mon May 20 08:39:57 EDT 2013


Introduction
------------

An email practice is a facility for solving program-
ming problems.  The problems may be similar to those
found in programming contests, hence the facility may
be used to practice for such contests.  Or the problems
may be designed to further the solver's practical know-
lege of algorithms or programming methods, according to
the general rule that to understand something well you
must write about it, and not simply read about it.


Submitting a Problem Solution
---------- - ------- --------

The problem descriptions are on the web page, along with
sample input/output files.  You should code up your
solution on your own computer.  You then submit your
solution by sending the following message to the
practice autojudge.

The e-mail address of the autojudge is on the practice
web page.  It typically has the form `XXXX<YYY@WWW.ZZZ>'
and the entire address, including the XXXX, must be
used as the destination of the e-mail.

The subject of the email must be `submit PPPP.EEE'
where PPPP is the problem name and EEE is an extension
which designates the programming language used for the
solution.  The possible extensions are

	c		C
	cc		C++
	java		JAVA
	lsp		COMMONLISP

Note that even if your local software uses a different
extension, your e-mail subject must use one of the above
extensions.  Thus to submit a C++ solution to the
reverser problem, the subject must be

	submit reverser.cc

even if the program file you submit has the name
reverser.cpp on your computer.

Lastly, you have a choice of how to include your
program file in the e-mail:

(1) You can insert it as the body of the e-mail.
    In this case the body must contain NOTHING BUT
    the program file.
    
    It is possible to have difficulties with this
    method if your mailer insists on inserting line
    ends to keep the lines short and you program file
    contains long lines.  In this case, you can either
    avoid long lines in your file or use method (2).

(2) You can attach the program file.  In this case
    the body of the e-mail MUST BE EMPTY.

It is a good idea to test your ability to submit by
submitting a solution from the web to a demo problem.
You may also want to first test this solution on your
computer to be sure your compiler is sufficiently
similar to the autojudge's compiler.  There are sample
input and output files for demo problems, along with
solutions in each programming language, among the help
files on the web.


Asking Questions
----------------

You can ask a question by sending the question as an
e-mail to the autojudge.  The subject line should NOT
begin with the words `submit' or `get'.  You e-mail will
be forwarded to a human practice manager who will answer
your question within a few days (assuming it is related
to the practice).

Working on a Problem
--------------------

For a problem named `pppp' you should write a file named
PPPP.EEE where EEE is the extension that determine the
programming language of the file: see above for more on
extensions.

Your program must read input data from the standard
input, compute, and write results to the standard
output.  You program MUST NOT OPEN ANY FILES.  The
autojudge will run it in a sandbox which and the program
will either crash or its input/output operations will
fail if it tries to open a file.

The autojudge will execute your program WITHOUT ANY
ARGUMENTS.  Therefore, you can use arguments to tell
your program to produce extra debugging output.  The
demo problem solutions are written so that they produce
extra debugging output if executed with any arguments
at all.


Resource Limits
-------- ------

Some problems have resource limits that require their
solutions to be time and space efficient.

If you look at the problem `Makefile' on the web you
will see that it contains memory and time resource
limits which constrain your problem.  Memory limits
are typically a few tens of megabytes and time limits
are typically 10 to 30 seconds.


Scoring
-------

The autojudge runs test cases against the solutions,
grades the solutions correct or not, and returns an
email to the submitter containing the grade.  If
incorrect, the email includes the input and output of
the autojudge's first failed test case, and a little bit
of other information that can be interpreted by using
`help scores'.  For an incorrect submission the sub-
mitter loses 5% of the submitter's remaining score on
the problem.  The maximum score, obtainable if the
submitter's first submission for the problem is correct,
varies with the difficulty of the problem, but is
typically 100, 200, or 300.  The maintains a complete
audit trail of its actions in case it misbehaves.

For incorrect submissions, the autojudge's return email
will contain the input and output for the first failed
test case.  You should add these to your pppp.in and
pppp.test files and continue debugging your program.
For a correct solution the email will contain the
judge's solution for you to look at, either in the
same programming language you used, or in the language
most related to that for which the judge has a solution.

The scoreboard on the web contains an entry for each
submitter and problem.  The entry is `.....' if the
submitter has not submitted any solution for the
problem, `.../N' if the submitter has submitted N
incorrect solutions, and `SSS/N' if the submitter has
submitted a correct solution and N previous incorrect
solutions, where SSS is the problem score, and is equal
to `MMM * 0.95^N' rounded to the nearest integer, where
MMM is the maximum possible score for the problem.

Submitter scores are reported in either the form TTT/P
or the form P/TTT, where TTT is the sum of solved
problem scores and P is the number of problems solved by
the submitter (note P is always a much smaller number
than TTT unless both are 0).  If the score is reported
as P/TTT, submitters are ranked so those with the
highest P, number of problems solved, are best, and
among those with equal P, those with highest TTT are
best.  If the score is reported as TTT/P, submitters are
ranked so those with the highest TTT are best, and among
those with equal TTT, those with highest P are best.

The submitter names on the scoreboard are controlled by
a map which can be changed by the practice manager.
Using the `Asking Questions' procedure above you may
e-mail to the autojudge a request to change this map and
the human practice manager will respond within a few
days.



File:		email_practice
Author:		Bob Walton <walton@seas.harvard.edu>
Date:		See top of file.

The authors have placed this file in the public domain;
they make no warranty and accept no liability for this
file.

RCS Info (may not be true date or author):

    $Author: walton $
    $Date: 2013/05/20 14:03:09 $
    $RCSfile: email_practice,v $
    $Revision: 1.1 $
