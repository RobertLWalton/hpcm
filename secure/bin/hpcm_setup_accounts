#! /bin/sh
#
# Setup User Accounts (to be executed by root)
#
# File:		hpcm_setup_accounts
# Author:	Bob Walton <walton@deas.harvard.edu>
# Date:		Mon Sep 26 02:28:50 EDT 2016
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.

all=no
force=no
while test x = x
do
    case "$1" in
    -all )	all=yes ;;
    -force )	force=yes ;;
    * )		break ;;
    esac
    shift
done

case "$1" in

"" | -doc )
    echo "
hpcm_setup_accounts [-all|-force] contest-directory-name

    The contest-directory-name must be absolute.

    Make all the accounts listed in contest-directory-
    name/secure/passwords and contest-directory-name/
    trashable, except for accounts that already exist.
    If an account name is \`none', it is ignored.

    For each account made, the password listed in
    contest-directory-name/secure/passwords is assigned
    to the account, unless the password is \`none' or
    \`'.  Next the account's /var/mail/ACCOUNT-NAME file
    is made if it does not exist.  Lastly
    
    	hpcm/contestant/bin/TRASH_ACCOUNT
	
    is run for the account if the account has no
    .hpcm_contest link or the -force option is given.

    If the -all option is given, accounts are (re)made
    even if they already exist, provided they are
    listed in contest-directory-name/trashable." \
    | less -F

    exit 1
    ;;
esac

# Be sure we are run as `root'.
#
if test `id -un` != root; then
    echo current uid is not root
    exit 1
fi

# Be sure contest directory has an absolute path name.
#
case "$1" in
    /* )
    	;;
    *)
    	echo "$1" is NOT an absolute pathname
	exit 1
    	;;
esac

# Be sure the files we require are readable.
#
if test ! -r $1/secure/passwords; then
	echo cannot read $1/secure/passwords
	exit 1
elif test ! -r $1/home/setup.tar
then
	echo cannot read $1/home/setup.tar
	exit 1
elif test ! -r $1/home/empty.ls
then
	echo cannot read $1/home/empty.ls
	exit 1
elif test ! -r $1/home/setup.ls
then
	echo cannot read $1/home/setup.ls
	exit 1
elif test ! -r $1/trashable
then
	echo cannot read $1/trashable
	exit 1
fi

exec 3<$1/secure/passwords
while read <&3
do
    # Read contest-directory-name/secure/passwords lines
    # and extract user and password, while ignoring
    # comment and blank lines.
    #
    if expr "$REPLY" : '[ 	]*#' >/dev/null
    then
	continue
    fi
    if expr "$REPLY" : '[ 	]*$' >/dev/null
    then
	continue
    fi
    if test -z "$REPLY"
    then
	continue
    fi
    user=`echo "$REPLY" | cut -d: -f1`
    password=`echo "$REPLY" | cut -d: -f2`

    # Check that our account name is listed in the
    # trashable file, and if no, ignore account.
    #
    grep "^$user\$" $1/trashable >/dev/null
    if test $? -ne 0
    then
	continue
    fi

    # Skip the `none' user and if no -all option also
    # users whose accounts exist.  Create accounts of
    # users not skipped whose accounts do not exists.
    # 
    if test "$user" = "none"
    then
    	continue
    elif test ! -d /home/$user
    then
	echo "useradd $user"
	useradd $user
    elif test $all = "no"
    then
	echo "$user already exists and no -all" \
	     "option: nothing done for $user"
	continue
    fi

    # Check that home directory of user exists.
    #
    if test ! -d /home/$user
    then
    	echo "creating $user failed to make" \
	     "home directory:"
	echo "    nothing more done for $user"
	continue
    fi

    # Set password of user account.
    #
    if test "$password" = "none"
    then
    	echo "Password for $user is \`none':" \
	     "$user password not set"
    elif test "$password" = ""
    then
    	echo "Password of $user is empty:" \
	     "$user password not set"
    else
	echo "$user password being set to $password"
	(sleep 2; echo "$password"; \
	 sleep 2; echo "$password") \
		| passwd "$user"
    fi

    # Make /var/mail/$user if it does not
    # exist.
    #
    if test ! -e /var/mail/$user
    then
        echo Making /var/mail/$user
    	touch /var/mail/$user
	chown $user /var/mail/$user
	chgrp mail /var/mail/$user
	chmod 660 /var/name/$user
	ls -l /var/mail/$user
    fi

    # Trash account
    #
    if test $force = "yes"
    then
    	echo su $user -c "$1/bin/TRASH_ACCOUNT $1"
    	su $user -c "$1/bin/TRASH_ACCOUNT $1"
    elif test -d /home/$user/.hpcm_contest
    then
	echo "$user has previously been" \
	     "set up and no -force option:" \
	     "$user not trashed"
    else
    	echo su $user -c "$1/bin/TRASH_ACCOUNT $1"
    	su $user -c "$1/bin/TRASH_ACCOUNT $1"
    fi

done
exec 3<&-

exit 0
