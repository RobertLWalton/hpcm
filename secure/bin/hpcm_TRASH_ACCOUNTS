#! /bin/sh
#
# Execute TRASH_ACCOUNTS in Contestant Accounts
# (to be executed by root)
#
# File:		hpcm_TRASH_ACCOUNTS
# Author:	Bob Walton <walton@deas.harvard.edu>
# Date:		Tue Jan 10 09:03:24 EST 2006
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: hc3 $
#   $Date: 2006/01/10 14:29:39 $
#   $RCSfile: hpcm_TRASH_ACCOUNTS,v $
#   $Revision: 1.10 $

case "$1" in

    "" | -* )
	echo "
hpcm_TRASH_ACCOUNTS contest-directory-name

    The contest-directory-name must be absolute.

    Execute TRASH_ACCOUNTS in all the accounts listed
    in contest-directory-name/secure/passwords and
    contest-directory/trashable.  If an account name
    is \`none' it is ignored."
	exit 1
	;;

    /* )
    	;;

    * )
    	echo $1 does not begin with a slash
	exit 1
	;;

esac

if test ! -r $1/secure/passwords; then
    echo cannot read $1/secure/passwords
    echo "Usage: hpcm_TRASH_ACCOUNTS" \
    	 "contest-directory-name"
    exit 1
fi

if test ! -r $1/trashable; then
    echo cannot read $1/trashable
    exit 1
fi

if test `id -un` != root; then
    echo current uid is not root
    exit 1
fi

for user in ` sed <$1/secure/passwords \
		  -e '/^[ \t]*#/d' \
                  -e 's/^\([^:]*\):.*$/\1/' `
do
    # Skip user `none' and users with no home directory.
    #
    if test "$user" = "none"
    then
        continue
    elif test ! -d /home/$user
    then
    	echo "$user has no home directory:" \
	     "$user not trashed"
	continue
    fi

    # Check that our account name is listed in the
    # trashable file, and if yes, trash account.
    #
    grep "^$user\$" $1/trashable >/dev/null
    if test $? -ne 0
    then
	echo "$user is not listed in" \
	     "$1/trashable: $user not trashed"
    else
    	echo su $user -c "$1/bin/TRASH_ACCOUNT $1"
    	su $user -c "$1/bin/TRASH_ACCOUNT $1"
    fi
done

exit 0
