#! /bin/sh
#
# Print account names and passwords.
#
# File:		hpcm_print_passwords
# Author:	Bob Walton <walton@deas.harvard.edu>
# Date:		Sun Feb 22 03:02:48 EST 2009
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2009/02/22 09:07:30 $
#   $RCSfile: hpcm_print_passwords,v $
#   $Revision: 1.9 $



case "$1" in
    -doc* )
	    echo "
hpcm_print_passwords [account ...] | lpr

    Account names and passwords taken from the file
    \`./passwords' are printed.  Each name and password
    is prefixed by the \`./passwords_header' file if
    that exists, and postfixed by the \`./passwords_
    trailer' file if that exists.  The hostname for the
    account is that returned by the \`hostname -f' UNIX
    command.
    
    The printouts for separate accounts are separated by
    a form feed.  If a printout for one account has
    several pages, form feeds must be included in the
    \`./passwords_header' or \`./passwords_trailer'
    files.

    If accounts are given as arguments, only these
    accounts will be selected.  Otherwise all accounts
    will be selected.

    If an account name or password is \`none' in the
    \`./passwords' file, the account is ignored.

    Review the output before printing it by
    replacing \`lpr' by \`more' or \`less'."

	    exit 1
	    ;;
esac

if test ! -r passwords; then
    echo >&2 ERROR: cannot read ./passwords
    exit 1
elif test ! -r passwords_header; then
    echo >&2 ERROR: cannot read ./passwords_header
    exit 1
fi

accounts=
while test $# -ne 0
do
    accounts="$accounts $1"
    shift
done

hostname=`hostname -f`

first=yes
exec 3< passwords
while read <&3
do
    if expr "$REPLY" : '[ 	]*#' >/dev/null
    then
	continue
    fi
    if expr "$REPLY" : '[ 	]*$' >/dev/null
    then
	continue
    fi
    if test -z "$REPLY"
    then
	continue
    fi
    user=`echo $REPLY | cut -d: -f1`
    password=`echo $REPLY | cut -d: -f2`
    who=`echo $REPLY | cut -d: -f3`

    found=yes
    if test "$accounts" != ""
    then
        found=no
	for u in $accounts
	do
	    if test "$u" = "$user"
	    then
	        found=yes
		break
	    fi
	done
    fi

    if test "$who" = ""
    then for_who=""
    else for_who=" for $who"
    fi

    if test "$found" = "no"
    then do_nothing=
    elif test "$user" = "none"
    then do_nothing=
    elif test "$password" = "none"
    then do_nothing=
    elif test ! -d /home/$user
    then
    	echo >&2 ERROR: $user has no home directory
    else
        if test "$first" = "yes"
	then first=no
	else echo -e '\f'
	fi

	if test -r passwords_header
	then cat passwords_header
	fi

	echo ""
        echo "The account name and" \
	     "password$for_who are:"
	echo ""
	echo "$user@$hostname      $password"
	echo ""

	if test -r passwords_trailer
	then cat passwords_trailer
	fi
    fi
done
exec 3<&-

exit 0
