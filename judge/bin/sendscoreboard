#!/bin/sh
#
# Makes the scoreboard and emails it to a given address.
#
# File:		sendscoreboard
# Author:	Bob Walton (walton@deas.harvard.edu)
# Date:		Wed Oct 25 07:38:32 EDT 2000
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: hc3 $
#   $Date: 2000/10/25 13:25:10 $
#   $RCSfile: sendscoreboard,v $
#   $Revision: 1.1 $
#
# The next line starts tcl \
exec tcl "$0" "$@"

# Use tcl rather than tclsh so that `signal' is defined.

# Include common code and parameters:
#
set lib_directory "[file dirname $argv0]/../lib"
source $lib_directory/judging_common.tcl
set log_globally yes
catch {

set document "
sendscoreboard email-address \[parameters_file\]

    This program produces a scoreboard suitable for
    displaying on the web and emails it to a given
    address.

    Specifically, the output of

	scorefinder | scoreboard \[parameters_file\]

    is prefixed with header lines containing the date
    and postfixed with any `scoreboard.notes' file in
    the judging parameters directory, and emailed to the
    given email-address as the body of a message.

    As an example use, if an invocation of this program
    is

      sendscoreboard '\"password scoreboard\"<foo@@bar>'

    and the .procmailrc file of account foo on machine
    bar contains

    :0 b:
    * ^To:.*password.*scoreboard
    | cat >public_html/private/password/scoreboard;\\
      chmod a+r public_html/private/password/scoreboard

    then the effect of the invocation will be to put
    a copy of the scoreboard, with optional trailing
    `scoreboard.notes', into the publicly readable file

      foo@bar:public_html/private/password/scoreboard

    Here `password' can be replaced by an actual pass-
    word that ensures people who do not know the pass-
    word cannot interfere with the system or see the
    scoreboard (if the `private' directory is not pub-
    licly readable)."

# If wrong number of arguments or the first argument
# begins with `-', print documentation and exit.
#
if { $argc > 2 || $argc == 0 \
     || ( [regexp {^-} [lindex $argv 0]] ) } {
    puts $document
    exit 1
}

# Collect scoreboard.
#
if { $argc == 1 } {
    catch { exec scorefinder | scoreboard } \
          scoreboard
} else {
    catch { exec scorefinder | \
            scoreboard [lindex $argv 1] } \
          scoreboard
}

# If the scoreboard is empty, say so explicitly.
#
if { $scoreboard == "" } {
    set scoreboard "The scoreboard is currently EMPTY!\
		   \ Nothing must have happened yet."
}

# Add head and tail.
#
set date [clock format [clock seconds]]
set notes \
    $judging_parameters_directory/scoreboard.notes
if { [file readable $notes] } {
    catch { exec cat $notes } tail
    set scoreboard "See notes below.           $date

=================== ===================\
=================== ===================
$scoreboard
=================== ===================\
=================== ===================

$tail"

} else {
    set scoreboard "$date

$scoreboard"
   
}

# Send the scoreboard to the email-address.
#
send_message "To: [lindex $argv 0]

$scoreboard"



exit 0

# Include common error catching code:
#
} caught_output
caught_error
