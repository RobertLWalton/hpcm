#!/bin/sh
#
# Copy sample or judge's input and test files.
#
# File:		testcp
# Author:	Bob Walton (walton@deas.harvard.edu)
# Date:		Thu Jan  1 18:32:37 EST 2015
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2014/12/24 13:02:02 $
#   $RCSfile: jfilter,v $
#   $Revision: 1.35 $
#
# The next lines start tclsh \
trap "echo jfilter: Terminated by Signal" \
    HUP INT QUIT; \
tclsh "$0" "$@"; exit $status

set document "
testcp source_dir 'regexp' \['subspec'\]

    Files in the source_dir directory whose names match
    the regexp regular expression are copied to the
    current directory file named by subspec.  Subspec
    may contain \\1, \\2, ... which will be replaced by
    the match of the first parenthesized subexpression
    of regexp, the match of the second parenthesized
    subexpression of regexp, etc.  If subspec is
    missing, the source file name is used (this is the
    same as specifiying '&' or '\\0' as subspec - see
    below).

    Regexp and subspec are as per the TCL regexp and
    regsub commands.  Name testing is done by regexp and
    name substitution by regsub.  See the documentation
    of these TCL commands for regexp and subspec
    formats.
"

if {    [llength $argv] < 2 || [llength $argv] > 3 \
     || [regexp {^-doc.*} [lindex $argv 0]] } {
    exec << $document less -F >&@ stdout
    exit 1
}

set source_dir [lindex $argv 0]
set regexp     [lindex $argv 1]
set subspec    [lindex $argv 2]
if { $subspec == "" } { set subspec '&' }

puts "Copying files"
puts "  from $source_dir"
puts "  to current directory"
foreach file [glob -directory $source_dir *] {
    set name [file tail $file]
    if { ! [regexp $regexp $name] } continue
    regsub $regexp $name $subspec new_name
    puts "Copying $name to $new_name"
    if { [file isdirectory $new_name] } {
        puts "ERROR: $new_name is directory"
	puts "       NOT overwritten"
	continue
    }
    file delete $new_name
    file copy $file $new_name
}

exit 0
