#!/bin/sh
#
# Test submissions in a judging directory.
#
# File:		testsubmit
# Author:	Bob Walton (walton@deas.harvard.edu)
# Date:		Sat May  4 03:33:00 EDT 2013
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2013/05/04 08:14:23 $
#   $RCSfile: testsubmit,v $
#   $Revision: 1.3 $
#
# The next lines start tclsh \
trap "echo makeweb: Terminated by Signal" \
    HUP INT QUIT; \
tclsh "$0" "$@"; exit $status

# Include common code and parameters:
#
set lib_directory "[file dirname $argv0]/../lib"
set log_disable yes
source $lib_directory/judging_common.tcl
catch {

set document "
testsubmit submit-file ...

For each submit file with .mail extension this program
executes

    cat submit-file \\
	| hpcm_sendmail -test \\
	| receivemail judging-directory \\
	| dispatchmail judging-directory

which submits the file which should have the format
of an email message with a `Subject:' header field,
and optionally other header fields such as `X-HPCM-
Test-Subject:'.  To verify that the judging directory is
working, read the replies in the judge's mailbox and
compare them with what the X-HPCM-Test-Subject field
says they should contain.

For all other files, this program executes

    hpcm_submit -test PROBLEM.EXT submit-file \\
	| receivemail judging-directory \\
	| dispatchmail judging-directory

where PROBLEM.EXT is the tail of the submit-file name,
which submits the file as a problem solution.  To verify
that the judging directory is working, read the replies
in the judge's mailbox - usually they should all be
`Completely Correct'.

These submissions will be as if they arrived in the
e-mail, but as `hpcm_sendmail -test' and `hpcm_submit
-test' are used, there is no actual use of e-mail, and
this program will work even if e-mail does not (i.e.,
if, say, procmailrc does not work because of selinux
settings)."

# On first -doc* argument, print documentation and exit.
#
if { [regexp {^-doc} [lindex $argv 0]] } {
    puts $document
    exit 1
}


foreach sfile $argv {
    sleep 2
    if { [file extension $sfile] == ".mail" } { 
	exec hpcm_sendmail -test < $sfile \
	     | receivemail $judging_directory \
	     | dispatchmail $judging_directory \
	       >@ stdout
    } else {
	set problem [file tail $sfile]
	exec hpcm_submit -test $problem $sfile \
	     | receivemail $judging_directory \
	     | dispatchmail $judging_directory \
	       >@ stdout
    }
}

exit 0

# Include common error catching code:
#
} caught_output
caught_error

