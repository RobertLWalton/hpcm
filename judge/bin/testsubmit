#!/bin/sh
#
# Test submissions in a judging directory.
#
# File:		testsubmit
# Author:	Bob Walton (walton@deas.harvard.edu)
# Date:		Sat May  4 10:36:51 EDT 2013
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: walton $
#   $Date: 2013/05/04 14:47:04 $
#   $RCSfile: testsubmit,v $
#   $Revision: 1.4 $
#
# The next lines start tclsh \
trap "echo makeweb: Terminated by Signal" \
    HUP INT QUIT; \
tclsh "$0" "$@"; exit $status

# Include common code and parameters:
#
set lib_directory "[file dirname $argv0]/../lib"
set log_disable yes
source $lib_directory/judging_common.tcl
catch {

set document "
testsubmit \[-ext \".EXT ...\"\] file-or-directory ...

For each file with .mail extension this program executes

    hpcm_sendmail -test < file \\
	| receivemail judging-directory \\
	| dispatchmail judging-directory

which submits the file.  The file should have the format
of an email message with a `Subject:' header field,
and optionally other header fields such as `X-HPCM-
Test-Subject:'.  To verify that the judging directory is
working, read the replies in the judge's mailbox and
compare them with what the X-HPCM-Test-Subject field
says they should contain.

For each file with one of the allowed extensions

	$allowed_extensions

this program executes

    hpcm_submit -test PROBLEM.EXT file \\
	| receivemail judging-directory \\
	| dispatchmail judging-directory

where PROBLEM.EXT is the tail of the file name.  This
submits the file as a problem solution.  To verify that
the judging directory is working, read the replies in
the judge's mailbox - usually they should all be
`Completely Correct'.

Files without the .mail extension or one of the allowed
extensions are ignored.

The set of allowed extensions can be changed with the
-ext option.

For each directory, this program looks recursively at
all the files and subdirectories in the directory.

All submissions will be as if they arrived in the
e-mail, but as `hpcm_sendmail -test' and `hpcm_submit
-test' are used, there is no actual use of e-mail, and
this program will work even if e-mail does not (i.e.,
if, say, procmailrc does not work because of selinux
settings)."

# On first -doc* argument, print documentation and exit.
#
if { [regexp {^-doc} [lindex $argv 0]] } {
    puts $document
    exit 1
}

if { [lindex $argv 0] == "-ext" } {
    set allowed_extensions [lindex $argv 1]
    set argv [lrange $argv 2 end]
}

proc submit { name } {
    global allowed_extensions judging_directory
    if { [file isdirectory $name] } {
        foreach n [glob -directory $name *] {
	    submit $n
	}
    } else {
        set ext [file extension $name]
	if { $ext == ".mail" } {
	    exec hpcm_sendmail -test < $name \
		 | receivemail $judging_directory \
		 | dispatchmail $judging_directory \
		   >@ stdout
	    sleep 2
	} elseif { [lcontain $allowed_extensions \
	                     $ext] } {
	    set problem [file tail $name]
	    exec hpcm_submit -test $problem $name \
		 | receivemail $judging_directory \
		 | dispatchmail $judging_directory \
		   >@ stdout
	    sleep 2
	}
    }
}

foreach name $argv { submit $name }

exit 0

# Include common error catching code:
#
} caught_output
caught_error

