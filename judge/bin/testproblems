#! /bin/sh
#
# Test problem code.
#
# File:		testproblems
# Author:	Bob Walton <walton@deas.harvard.edu>
# Date:		Sun Jan 18 23:17:15 EST 2004
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: hc3 $
#   $Date: 2004/01/19 04:20:55 $
#   $RCSfile: testproblems,v $
#   $Revision: 1.8 $

# If this is not bash and bash is available, switch to
# using bash.  Note that `which bash` may output a
# grubby error message and no error code if bash does
# not exist.  Some non-bash sh'es have trouble with
# `test -e'.
#
bash=`which bash 2>/dev/null`
if test "$BASH" = "" -a "$bash" != "" -a -x "$bash"
then
    exec bash "$0" "$@"
fi

case "$1" in
    "" | -* )
	    echo "
testproblems directory ...

    							
    This program runs:

    		make clean
		make
		diff *.out *.test
		make clean

    in each directory.  It saves the diff outputs in
    addition to outputting them, and then plays back
    all the saved output at the end of this program's
    execution.
    
    If a non-directory is given the program, or if a
    directory with no Makefile is given, the program
    merely notes this in the output."

	    exit 1
	    ;;
esac

tmp=/tmp/testproblems$$

trap "rm -f $tmp" 0
echo >$tmp

for x in "$@"
do
    if test \! -d $x; then
	echo "$x is not a directory"
	continue
    fi

    if test \! -e $x/Makefile; then
	echo "$x/Makefile does not exist"
	continue
    fi

    echo "========== $x:" >>$tmp

    (cd $x; make clean; \
            make; \
	    diff *.out *.test 2>&1 | tee -a $tmp; \
	    make clean)
done

cat $tmp

exit 0
