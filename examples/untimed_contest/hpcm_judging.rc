# TCL Parameters File for Untimed Contest Judging
#
# File:		hpcm_judging.rc
# Author:	Bob Walton (walton@deas.harvard.edu)
# Date:		Tue Apr 18 06:46:40 EDT 2006
#
# The authors have placed this program in the public
# domain; they make no warranty and accept no liability
# for this program.
#
# RCS Info (may not be true date or author):
#
#   $Author: hc3 $
#   $Date: 2006/04/18 10:54:11 $
#   $RCSfile: hpcm_judging.rc,v $
#   $Revision: 1.23 $

# Table of Contents
#
#	Parameters to be Modified
#	Parameters Not Usually Modified
#	Computed Parameters (Do Not Modify)
#	Parameter Overrides

# Parameters to be Modified
# ---------- -- -- --------

# Read standard parameters.
#
source $lib_directory/hpcm_judging.rc

# The following parameters determine the type and
# variety of contest.

# Contestant account type.  One of:
#
#	email		Contestants provide their own
#			contest accounts and send sub-
#			missions via email.
#
#	local		An account is provided by the
#			judge for the contestant.
#
#	email+local	Both the above.
#	local+email
#
set account_type email
# set account_type local

# Scoring type.  One of:
#
#	feedback	Scored according to number of
#			incorrect, in, and inout submis-
#			sions.
#
#	dated		Only date of correct submission
#			is given, and contestants are
#			ordered by number of correct
#			problems.
#
#	unordered	Only date of correct submission
#			is given, and contestants are
#			listed alphabetically.
#
set scoring_type feedback

# Problem description type.  One of:
#
#	web		Problem descriptions are on the
#			web.
#
#	paper		Problem descriptions have been
#			given out on paper.
#
#	web+paper	Combination of the above.
#	paper+web
#
set description_type web

# Set to allow different types of submit:
#
#	in		Allow in-submit
#
#	inout		Allow inout-submit
#
#	solution	Allow solution-submit
#
#	in+solution	Allow combination.
#	solution+in
#	in+inout+solution
#	etc.
#
set response_mode solution
# set response_mode in+inout+solution

# Autojudge's email address, or "" if this is to be
# automatically determined.
#
set autojudge_address ""
# set autojudge_address "somename<someone@somecomputer>"

# Contest name, for scoreboard etc.
#
set contest_name "CONTEST NAME IS TBD"

# The email address to be notified for errors or
# queries.
#
set manager_address "someone@somecomputer"

# Set the following to "yes" if you want all replies to
# contestants to be CC'ed to the manager, even those
# just reporting scores or getting problems.
#
set cc_manager no

# The following are the beginning and ending of the
# initial version of the ./help/this_contest file.  Each
# should begin and end with a line feed, or be "".  Each
# will then be separated from other text by a blank line.
#
# If you want to modify this_contest further, you may
# edit the ./help/this_contest file directly after it
# has been initially made.  The version of the file that
# is made by this hpcm_judging.rc file will be mantained
# in ./help/this_contest_parameter for reference pur-
# poses, while ./help/this_contest will be left untouch-
# ed after it has been edited to be different from
# ./help/this_contest_parameter.
# 
set this_contest_prefix "
THIS FILE IS UNEDITED AND INACCURATE!
"
set this_contest_postfix "
Good Hunting!
"

# TCL list of addresses to email scoreboard to.  If this
# list contains zzz<YYY>, then every time the scoreboard
# is updated it will be emailed to `zzz<YYY>', so in the
# account YYY .procmailrc file you should put something
# like the following to copy the scoreboard into the
# public_html/xxx file of the YYY account:
#
#	:0 b:
#	* ^To:.*zzz
#	| cat >public_html/xxx;\
#	  chmod a+r public_html/xxx
#
# If there are spaces or quotes in zzz<YYY>, it should
# be enclosed in {} braces in the address list.
#
set scoreboard_addresses { }
# set scoreboard_addresses {
#	{"some thing"<someaccount@somecomputer>}
# }

# TCL list of TCL regular expressions that match the
# test accounts which are NOT to appear on the score-
# board.
#
set test_accounts { }

# Ditto for test problems instead of accounts.  Usually
# you need not change this.
#
set test_problems { count javaio }

# Set to the HPCM directory.  $env(HOME) is the home
# directory of the current (judge's) account.
#
set hpcm_directory $env(HOME)/hpcm

# List of makecontest arguments that specify the
# problems.  The format is
#
#	INDEX-FILE-NAME,
#	    SUBDIRECTORY/=problems/,
#	    QUALIFIER:include
#
# where the problems are in the SUBDIRECTORY of the
# directory holding the index file.  See below for
# examples.
#
set problems_arguments "
    $hpcm_directory/problem_library/index, \
	public/=problems/, \
	    P1:include
"
# Use the following if index is the file ~/ppp/iii and
# problems are in subdirectories of ~/ppp.  Because the
# problems are subdirectories of ~/ppp which contains
# the index file, `SUBDIRECTORY/' is the omitted.
# $env(HOME) is the home directory of the current
# (judge's) account.  `ALL' means include all problems
# listed in the index.
#
# set problems_arguments "
#     $env(HOME)/ppp/iii, \
#         =problems/, \
#             ALL:include
# "
#
# See hpcm/judge/lib/hpcm_judging.rc `makecontest_
# arguments' for more details, and `makecontest -doc'
# for complete details.

# Set the following if you want to use `makeweb' to
# make a web page.  Leave as "" parameters you do not
# want to use (e.g., if web_solutions_password is "" no
# solutions web page will be made).
#
# The web_manager_address will be listed as a contact
# on the web page.  The web_solutions_password PPP will
# be used to name a subdirectory `private/PPP' of the
# web page directory that will hold the solutions.  No
# link will be made to this directory, and the `private'
# subdirectory will be unreadable to the world, so PPP
# will act as a password.  The web_help_URL is the URL
# of the help page (see hpcm/contestant/help Makefile)
# relative to the contest web page.  The web_scoreboard_
# URL is the URL of the scoreboard relative to the web
# page; usually this is posted by using scoreboard_
# addresses (see above).
#
set web_contest_name $contest_name
set web_manager_address $manager_address
set web_solutions_password ""
set web_help_URL ""
set web_scoreboard_URL ""

# Parameters Not Usually Modified
# ---------- --- ------- --------

# Normally you should not have to make changes below
# this point.

# Set to "long" to include a contestant's primary domain
# name (e.g. `harvard') or "short" to not include the @
# or anything after that.
#
if { [regexp email $account_type] } {
    set submitter_compress_mode long
else {
    set submitter_compress_mode short
}

# Set "yes" to use GMT for dates in file and directory
# names.  Otherwise the local time zone is used.
#
set use_gmt no

# Set the manualreply display to have a certain height
# with a given number of blank lines above that.  If you
# have a taller display, increase window_height.
#
# WARNING: If window_height is too large, programs such
# as manualreply and lookat may appear to be malfunc-
# tioning because some of the information they display
# is being scrolled off the top of the screen.
#
set window_blank_height 16
set window_height 24

# Set to contest directory, in case the $judging_
# directory/contest link needs to be made.  If needed
# and not set, the name of judging directory with
# `judging' replaced by `contest' and trailing password
# removed will be used.
#
# set contest_directory $env(HOME)/contest_TBD

# Set to the prototype account (as per SETUP_PROTOTYPE).
# If not set, the unique account with name of the form
# *[-_]proto and readable files home/setup.tar, home/
# empty.ls, and home/setup.ls is used, if there is such
# a unique account.
#
# set hpcm_prototype_account TBD

# Set to "no" if you do not want makecontest to run
# `makescoreboard start'.
#
set makescoreboard yes


# Computed Parameters (Do Not Modify)
# -------- ---------- ---------------

# You should NOT make changes beyond this point, unless
# you want to tune the contest to be a variant of one of
# the standards supported by this file.  If you do want
# to tune the contest, put changes at the very end of
# this file, where they will override the settings of
# this file.

# Set addresses of autojudge and update Contest_Address.
#
set autojudge_addresses [list $autojudge_address]
if {    ! [file exists \
                $judging_directory/Contest_Adress] \
     ||    [read_file \
                $judging_directory/Contest_Address] \
        != $autojudge_address } {
    write_file $judging_directory/Contest_Address \
	       $autojudge_address
}

# Always return .cerr file on syntax error.
#
set response_list {}
foreach response [split $response_mode +] {
    if {    [lcontain {in inout solution} $response] \
         && ! [lcontain $response_list $response] } {
        lappend response_list $response
    }
}
set response_mode "$response_mode+cerr"

# If only local accounts, require submissions to have
# HPCM_BEGIN/HPCM_END lines etc and authentication.
#
if { $account_type == "local" } {
    set use_authentication yes
    set format_submissions yes
} else {
    set use_authentication no
    set format_submissions no
}

# Default arguments to makecontest.
#
set makecontest_arguments "
    -email -startcontest -description \
    [include_if { $makescoreboard == "yes" } \
    		"-scoreboard"] \
    $judging_directory/help/index, \
	=help/ \
    $hpcm_directory/contestant/help/index, \
	common/=help/, \
	email/=help/, \
	advanced/=help/, \
	    email:include, \
	    common:include, \
	    advanced:include \
    $hpcm_directory/problem_library/index, \
	    demo:include \
    $problems_arguments
"

# Set the scoreboard timing for the contest.
#
if { [lcontain {team problem} $scoring_type] } {
    set scoreboard_start_time $scoring_type
} elseif { $scoring_type == "feedback" } {
    set scoreboard_start_time ""
} elseif { $scoring_type == "dated" } {
    set scoreboard_start_time ""
    set scoreboard_display_correct no
    set scoreboard_display_incorrect no
} else {
    error "bad scoring_type: $scoring_type"
}
set scoreboard_penalty [expr 60 * $penalty_minutes]

# Scoreboard name, i.e, the name of the contest.
#
set scoreboard_name $contest_name

# Compute scoreboard_submitters to exclude test
# accounts.
#
set scoreboard_submitters {}
foreach x $test_accounts {
    lappend scoreboard_submitters & ! $x
}
set scoreboard_submitters \
    [lrange $scoreboard_submitters 1 end]
#
# Compute scoreboard_problems to exclude test
# problems.
#
set scoreboard_problems {}
foreach x $test_problems {
    lappend scoreboard_problems & ! $x
}
set scoreboard_problems \
    [lrange $scoreboard_problems 1 end]


# Scoreboard instructions for an email contest.
#
set scoreboard_instructions {

    { OUTPUT scoreboard.email "" "" }
    GRANT_ACCESS
    SEND

    { LINE NAME "" TIME }
    BLANK
    { INPUT scoreboard.1head }
    BLANK

    BAR
    BOARD
    BAR

    BLANK
    { INPUT scoreboard.1tail }
}

if { $scoring_type == "feedback" } {
    set scoreboard_use_qualifiers yes
} else {
    set scoreboard_use_qualifiers no
}
set scoring_mode auto
set reply_mode auto
set log_mode auto
set reply_manager $manager_address
set log_manager $manager_address
if { $cc_manager } {
    set response_manager $reply_manager
} else {
    set response_manager ""
}

# Compute this_contest.
#
set this_contest "$this_contest_prefix
The important help and demonstration problem files
are available via the contest web page.

This is an `email' contest.  The `email_contest' help
file displays more details about email contests.

To submit a problem solution file named FFF.F, send
an email whose `To:' field is

	To: $autojudge_address

whose `Subject:' field is

	Subject: submit FFF.F

and whose body contains nothing but the file itself.
To test this with a demonstration problem, get the
file named `count1.c' from the web pages, rename it
`count.c', and submit it.  Other solutions to demonstra-
tion problems are on the web pages and can be submitted.
[include_if { [lcontain {problem team} \
                        $scoring_type] } "
Because this is a timed contest, problem descriptions
are NOT on the web.  Instead, you get the description
of a problem named PPP by sending an email message whose
`To:' field is

	To: $autojudge_address

and whose `Subject:' field is

	Subject: get PPP

The reply will contain a file that describes the pro-
blem.  The extension of this file tells its type: .txt
for plain text, .html or .htm for HTML, .ps for post-
script.  Several files may be returned separated by
lines containing a special pattern unlikely to be
included in the files.  You may practice on the demon-
stration problems by sending email with `Subject: get
count', though this will deliver a large number of
files besides the problem descriptions, whereas a real
problem usually delievers only the description file and
a single other `Makefile'.
"][include_if { $scoring_type == "problem" } "
In order to get good scores on problems, you must AVOID
getting a problem description UNTIL you are READY to
swiftly solve the problem, as the time between when you
get the problem description and when you first submit a
correct solution for the problem is the problem time on
the scoreboard.
"][include_if { $scoring_type == "team" } "
In order to get good scores on problems, you must AVOID
getting ANY non-demonstration problem descriptions UNTIL
you are READY to swiftly solve ALL problems, as the time
you get your first problem description is the start time
of the contest for you.  For each problem, the differ-
ence between this contest start time and the time when
you first submit a correct solution for the problem is
the problem time on the scoreboard.
"]
The scoreboard is posted on the web.  See the `score-
board' help file for details.  See the `email_solving'
help file for details on how to solve a problem (note
that this is different from the `solving' help file).
[include_if { [llength $response_list] > 0 } "
For this contest you can use alternative submission
emails with subjects of any one of the forms:
"][include_if { [lcontain $response_list in] } "
    Subject: submit ppp.ext in"][
   include_if { [lcontain $response_list inout] } "
    Subject: submit ppp.ext inout"][
   include_if { [lcontain $response_list solution] } "
    Subject: submit ppp.ext solution"][
   include_if { [llength $response_list] == 3 } "
"][include_if {    0 < [llength $response_list] \
		&&     [llength $response_list] < 3 } "
But you CANNOT use the alternative submission emails
with subjects of any one of the forms:
"][include_if { [llength $response_list] == 0 } "
For this contest you CANNOT use the alternative submis-
sion emails with subjects of any one of the forms:
"][include_if { ! [lcontain $response_list in] } "
    Subject: submit ppp.ext in"][
   include_if { ! [lcontain $response_list inout] } "
    Subject: submit ppp.ext inout"][
   include_if { ! [lcontain $response_list solution] } "
    Subject: submit ppp.ext solution"][
   include_if { [llength $response_list] < 0 } "
"]$this_contest_postfix"

# Parameter Overrides
# --------- ---------

# Add parameter settings here to override parameters
# that are normally not changed above.
