Subject: submit count.c
X-HPCM-Test-Subject: count_too_much_output.c:
    score should be Output Size Limit Exceeded

HPCM_BEGIN count.c
..#include <stdio.h>
..
..main()
..{
..    int paragraph = 1;
..
..    /* To get a very big file without breaking      */
..    /* the limits of scorediff, we have to output   */
..    /* 10000 whitespace characters in place of      */
..    /* every space character.  It must be white-    */
..    /* space or else the score will be Incorrect    */
..    /* Output.                                      */
..
..    char space[10001];
..    int k;
..    for ( k = 0; k < 10000; ++ k ) space[k] = ' ';
..    for ( k = 0; k < 10000; k += 50 ) space[k] = '\n';
..    space[10000] = 0;
..
..    while ( 1 )
..    {
..	int characters = 0;
..	int words = 0;
..	int lines = 0;
..
..	char buffer [102];
..
..	int at_end_of_file = 1;
..
..	while ( fgets ( buffer, sizeof ( buffer),
..	                stdin ) )
..	{
..	    char * cp = buffer;
..
..	    at_end_of_file = 0;
..
..	    while ( * cp == ' ' ) ++ cp;
..
..	    if ( * cp == 0 || * cp == '\n' ) break;
..
..	    ++ lines;
..
..	    do
..	    {
..		++ words;
..		while ( * cp != ' ' &&
..		        * cp != '\n' &&
..			* cp != 0 ) ++ cp;
..		while ( * cp == ' ' ) ++ cp;
..	    } while ( * cp != 0 && * cp != '\n' );
..
..	    characters += ( cp - buffer );
..	}
..
..	if ( at_end_of_file ) break;
..
..	if ( lines > 0  )
..	{
..	    printf ( "Paragraph%s%d:%s%d%slines,"
..	             "%s%d%swords,"
..	             "%s%d%scharacters.\n", space,
..                   paragraph, space,
..		     lines, space, space,
..		     words, space, space,
..		     characters, space );
..
..	    ++ paragraph;
..	}
..    }
..
..    return 1;   /* This line can be omitted.
..		 * It is a test that make count.out
..		 * works even if count returns an
..		 * error code.
..		 */
..}
HPCM_END count.c
